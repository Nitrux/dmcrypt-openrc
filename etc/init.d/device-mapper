#!/sbin/openrc-run

description="Sets up Device Mapper volumes from /etc/dmtab"

depend() {
	need modules
	before dmeventd fsck
	provide dmsetup
}

_dmvolume_exists() {
	[ -z "$1" ] && return 1
	/usr/sbin/dmsetup ls 2>/dev/null | grep -q "^$1[[:space:]]"
}

_get_new_dm_volumes() {
	grep -v -e '^[[:space:]]*\(#\|$\)' /etc/dmtab | \
	awk '{ print $1 }' | uniq | \
	while IFS= read -r volume; do
		_dmvolume_exists "${volume}" || echo "${volume}"
	done
}

_build_dmsetup_table() {
	local volume=$1
	grep -v -e '^[[:space:]]*\(#\|$\)' /etc/dmtab | \
		grep "^${volume}[[:space:]]" | \
		awk '{$1=""; print substr($0,2)}'
}

start_pre() {
	if ! grep -qs 'device-mapper' /proc/devices; then
		modprobe dm-mod
	fi

	if [ ! -x /usr/sbin/dmsetup ]; then
		eerror "/usr/sbin/dmsetup not found"
		return 1
	fi
	if [ ! -f /etc/dmtab ]; then
		einfo "/etc/dmtab not found, nothing to do."
		return 0
	fi
}

start() {
	ebegin "Setting up Device Mapper volumes"

	local volumes_to_create
	volumes_to_create=$(_get_new_dm_volumes)

	if [ -z "${volumes_to_create}" ]; then
		eend 0 "No new volumes to create"
		return 0
	fi

	local volume dm_table
	for volume in ${volumes_to_create}; do
		einfo "  Creating volume: ${volume}"
		dm_table=$(_build_dmsetup_table "${volume}")
		if ! echo "${dm_table}" | /usr/sbin/dmsetup create "${volume}"; then
			ewarn "    Failed to create volume ${volume}"
		fi
	done

	eend 0
}
